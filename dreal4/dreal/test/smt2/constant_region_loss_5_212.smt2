(set-logic QF_NRA)
(declare-fun a_0_0_0() Real)
(declare-fun a_0_1_0() Real)
(declare-fun b_0_0_0() Real)
(declare-fun b_0_0_1() Real)
(declare-fun total_error_0() Real)
(declare-fun x_0_0_0() Real)
(declare-fun x_0_0_1() Real)
(declare-fun s_0_0_0() Real)
(declare-fun relu_0_0_0() Real)
(declare-fun out_0_0_0() Real)
(declare-fun out_0_0_1() Real)
(declare-fun y_0_0_0() Real)
(declare-fun y_0_0_1() Real)
(declare-fun error_0_0() Real)
(assert (= s_0_0_0 (+ (* x_0_0_0 a_0_0_0)(* x_0_0_1 a_0_1_0))))
(assert (and (=> (> s_0_0_0 0) (= relu_0_0_0 s_0_0_0)) (=> (<= s_0_0_0 0) (= relu_0_0_0 0))))
(assert (= out_0_0_0 (+(* relu_0_0_0 b_0_0_0))))
(assert (= out_0_0_1 (+(* relu_0_0_0 b_0_0_1))))
(assert (= error_0_0 (+(^ (- y_0_0_0 out_0_0_0) 2)(^ (- y_0_0_1 out_0_0_1) 2))))
(declare-fun x_1_0_0() Real)
(declare-fun x_1_0_1() Real)
(declare-fun s_1_0_0() Real)
(declare-fun relu_1_0_0() Real)
(declare-fun out_1_0_0() Real)
(declare-fun out_1_0_1() Real)
(declare-fun y_1_0_0() Real)
(declare-fun y_1_0_1() Real)
(declare-fun error_1_0() Real)
(assert (= s_1_0_0 (+ (* x_1_0_0 a_0_0_0)(* x_1_0_1 a_0_1_0))))
(assert (and (=> (> s_1_0_0 0) (= relu_1_0_0 s_1_0_0)) (=> (<= s_1_0_0 0) (= relu_1_0_0 0))))
(assert (= out_1_0_0 (+(* relu_1_0_0 b_0_0_0))))
(assert (= out_1_0_1 (+(* relu_1_0_0 b_0_0_1))))
(assert (= error_1_0 (+(^ (- y_1_0_0 out_1_0_0) 2)(^ (- y_1_0_1 out_1_0_1) 2))))
(assert (= total_error_0 (+ error_0_0 error_1_0 )))

(assert (= x_0_0_0 1))
(assert (= x_0_0_1 0))
(assert (= x_1_0_0 1))
(assert (= x_1_0_1 1))
(assert (= y_0_0_0 1))
(assert (= y_0_0_1 0))
(assert (= y_1_0_0 0))
(assert (= y_1_0_1 2))

(assert (< (^ (- a_0_0_0 -0.36) 2)  0.001))
(assert (< (^ (- a_0_1_0 0.13) 2)  0.001))
(assert (< (^ (- b_0_0_0 -1.14) 2) 0.001))
(assert (< (^ (- b_0_0_1 -0.23) 2) 0.001))

(assert (> (^ (- a_0_0_0 -0.36) 2)  0.0001))
(assert (> (^ (- a_0_1_0 0.13) 2)  0.0001))
(assert (> (^ (- b_0_0_0 -1.14) 2) 0.0001))
(assert (> (^ (- b_0_0_1 -0.23) 2) 0.0001))

(assert (or (> total_error_0 5.0001) (< total_error_0 4.999)))

(check-sat)
(exit)
